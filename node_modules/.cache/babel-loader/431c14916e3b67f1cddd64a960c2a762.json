{"ast":null,"code":"import _classCallCheck from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"E:\\\\trello\\\\trello-clone-master\\\\src\\\\components\\\\TrelloBoard.js\";\n\nimport React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nvar ListsContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n\"]))); // TODO: Fix performance issue\n\n_c = ListsContainer;\n\nvar TrelloBoard = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TrelloBoard, _PureComponent);\n\n  var _super = _createSuper(TrelloBoard);\n\n  function TrelloBoard() {\n    var _this;\n\n    _classCallCheck(this, TrelloBoard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onDragEnd = function (result) {\n      var destination = result.destination,\n          source = result.source,\n          draggableId = result.draggableId,\n          type = result.type;\n\n      if (!destination) {\n        return;\n      }\n\n      _this.props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type));\n    };\n\n    return _this;\n  }\n\n  _createClass(TrelloBoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // set active trello board here\n      var boardID = this.props.match.params.boardID;\n      this.props.dispatch(setActiveBoard(boardID));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          lists = _this$props.lists,\n          cards = _this$props.cards,\n          match = _this$props.match,\n          boards = _this$props.boards;\n      var boardID = match.params.boardID;\n      var board = boards[boardID];\n\n      if (!board) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 14\n          }\n        }, \"Board not found\");\n      }\n\n      var listOrder = board.lists;\n      return /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"Go Back\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, board.title), /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"all-lists\",\n        direction: \"horizontal\",\n        type: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, function (provided) {\n        return /*#__PURE__*/React.createElement(ListsContainer, Object.assign({}, provided.droppableProps, {\n          ref: provided.innerRef,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }), listOrder.map(function (listID, index) {\n          var list = lists[listID];\n\n          if (list) {\n            var listCards = list.cards.map(function (cardID) {\n              return cards[cardID];\n            });\n            return /*#__PURE__*/React.createElement(TrelloList, {\n              listID: list.id,\n              key: list.id,\n              title: list.title,\n              cards: listCards,\n              index: index,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }\n            });\n          }\n        }), provided.placeholder, /*#__PURE__*/React.createElement(TrelloCreate, {\n          list: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TrelloBoard;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lists: state.lists,\n    cards: state.cards,\n    boards: state.boards\n  };\n};\n\nexport default connect(mapStateToProps)(TrelloBoard);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListsContainer\");","map":{"version":3,"sources":["E:/trello/trello-clone-master/src/components/TrelloBoard.js"],"names":["React","PureComponent","TrelloList","connect","TrelloCreate","DragDropContext","Droppable","styled","sort","setActiveBoard","Link","ListsContainer","div","TrelloBoard","onDragEnd","result","destination","source","draggableId","type","props","dispatch","droppableId","index","boardID","match","params","lists","cards","boards","board","listOrder","title","provided","droppableProps","innerRef","map","listID","list","listCards","cardID","id","placeholder","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    // set active trello board here\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to=\"/\">Go Back</Link>\n        <h2>{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n"]},"metadata":{},"sourceType":"module"}