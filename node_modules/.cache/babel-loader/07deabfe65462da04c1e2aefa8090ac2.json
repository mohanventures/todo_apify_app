{"ast":null,"code":"import _slicedToArray from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"E:/trello/trello-clone-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _this = this,\n    _jsxFileName = \"E:\\\\trello\\\\trello-clone-master\\\\src\\\\components\\\\TrelloList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\nvar ListContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background-color: #dfe3e6;\\n  border-radius: 3px;\\n  width: 300px;\\n  padding: 8px;\\n  height: 100%;\\n  margin: 0 8px 0 0;\\n\"])));\n_c = ListContainer;\nvar StyledInput = styled.input(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  border: none;\\n  outline-color: blue;\\n  border-radius: 3px;\\n  margin-bottom: 3px;\\n  padding: 5px;\\n\"])));\n_c2 = StyledInput;\nvar TitleContainer = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  cursor: pointer;\\n\"])));\n_c3 = TitleContainer;\nvar DeleteButton = styled(Icon)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  transition: opacity 0.3s ease-in-out;\\n  opacity: 0.4;\\n  &:hover {\\n    opacity: 0.8;\\n  }\\n\"])));\n_c4 = DeleteButton;\nvar ListTitle = styled.h4(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n  transition: background 0.3s ease-in;\\n  \", \":hover & {\\n    background: #ccc;\\n  }\\n\"])), TitleContainer);\n_c5 = ListTitle;\n\nvar TrelloList = function TrelloList(_ref) {\n  _s();\n\n  var title = _ref.title,\n      cards = _ref.cards,\n      listID = _ref.listID,\n      index = _ref.index,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setIsEditing = _useState2[1];\n\n  var _useState3 = useState(title),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listTitle = _useState4[0],\n      setListTitle = _useState4[1];\n\n  var renderEditInput = function renderEditInput() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleFinishEditing,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyledInput, {\n      type: \"text\",\n      value: listTitle,\n      onChange: handleChange,\n      autoFocus: true,\n      onFocus: handleFocus,\n      onBlur: handleFinishEditing,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var handleFocus = function handleFocus(e) {\n    e.target.select();\n  };\n\n  var handleChange = function handleChange(e) {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  var handleFinishEditing = function handleFinishEditing(e) {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  var handleDeleteList = function handleDeleteList() {\n    dispatch(deleteList(listID));\n  };\n\n  return /*#__PURE__*/React.createElement(Draggable, {\n    draggableId: String(listID),\n    index: index,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, function (provided) {\n    return /*#__PURE__*/React.createElement(ListContainer, Object.assign({}, provided.draggableProps, provided.dragHandleProps, {\n      ref: provided.innerRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: String(listID),\n      type: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, function (provided) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, isEditing ? renderEditInput() : /*#__PURE__*/React.createElement(TitleContainer, {\n        onClick: function onClick() {\n          return setIsEditing(true);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 23\n        }\n      }, listTitle), /*#__PURE__*/React.createElement(DeleteButton, {\n        onClick: handleDeleteList,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }\n      }, \"delete\"))), /*#__PURE__*/React.createElement(\"div\", Object.assign({}, provided.droppableProps, {\n        ref: provided.innerRef,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }), cards.map(function (card, index) {\n        return /*#__PURE__*/React.createElement(TrelloCard, {\n          key: card.id,\n          text: card.text,\n          id: card.id,\n          index: index,\n          listID: listID,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }\n        });\n      }), provided.placeholder, /*#__PURE__*/React.createElement(TrelloCreate, {\n        listID: listID,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      })));\n    }));\n  });\n};\n\n_s(TrelloList, \"VKJshuHRylcAQ0PgDmQGKOt4Y/4=\");\n\n_c6 = TrelloList;\nexport default connect()(TrelloList);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"TitleContainer\");\n$RefreshReg$(_c4, \"DeleteButton\");\n$RefreshReg$(_c5, \"ListTitle\");\n$RefreshReg$(_c6, \"TrelloList\");","map":{"version":3,"sources":["E:/trello/trello-clone-master/src/components/TrelloList.js"],"names":["React","useState","TrelloCard","TrelloCreate","Droppable","Draggable","styled","connect","editTitle","deleteList","Icon","ListContainer","div","StyledInput","input","TitleContainer","DeleteButton","ListTitle","h4","TrelloList","title","cards","listID","index","dispatch","isEditing","setIsEditing","listTitle","setListTitle","renderEditInput","handleFinishEditing","handleChange","handleFocus","e","target","select","preventDefault","value","handleDeleteList","String","provided","draggableProps","dragHandleProps","innerRef","droppableProps","map","card","id","text","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n"]},"metadata":{},"sourceType":"module"}